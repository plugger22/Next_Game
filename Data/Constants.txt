# Constants
# FORMAT - first line -> '# Explanation'
# FORMAT - second line -> 'x : y @ L @ H' where x is the index code and y is value (CAN CHANGE), L & H are MIN and MAX possible values
# blank lines and spaces are ignored
# all values are 1+ (a zero value is invalid)

# Actors ---

# INHERIT_TRAIT -> % chance of traits being inherited. Sons inherit from fathers, daughters from mothers
1: 50 @ 0 @ 100
# CHILDBIRTH_DEATH -> % chance of Mother dying at the birth of her child
2: 15 @ 0 @ 100
# CHILDBIRTH_COMPLICATIONS -> % chance of Mother suffering complications (may or may not result in infertility)
11: 35 @ 0 @ 100
# CHILDBIRTH_INFERTILE -> % chance of the Mother becoming infertile at the birth of her child
3: 40 @ 0 @ 100
# PREGNANT -> % chance of a child arriving every 2 years
4: 75 @ 0 @ 100
# TOUCHED -> % chance of an actor having the touched trait
5: 2 @ 0 @ 100
# LAND_SPEED -> movement speed of actors on map (by horse), per turn
10: 2 @ 1 @ 3
# SEA_SPEED -> movement speed of actors on a Sea Passage, per turn
65: 4 @ 2 @ 6

# Followers ---

# START_FOLLOWERS -> number of followers at game start (max 6)
28: 3 @ 0 @ 4
# MAX_FOLLOWERS -> can't have any more than this
67: 6 @ 0 @ 8
# RECRUIT_FOLLOWERS -> % chance of a 'Recruit Followers..' option appearing at an Inn each time
68: 80 @ 10 @ 100

# Houses ---

# MEN_AT_ARMS -> number of men of arms a Major house starts with. Bannerlords have half this number.
6: 12000 @ 1000 @ 20000
# CASTLE_CAPITAL -> strength of castle walls (defences) for the capital (0 to value)
36: 5 @ 5 @ 5

# History ---

# BATTLE_EVENTS -> number of random rolls on battle events table for each battle
7: 4 @ 1 @ 5
# ADVISOR_REFUSAL -> chance of advisor refusing to serve under new king
8: 20 @ 0 @ 100
# SIBLING_ESCAPE -> chance of any of Player's brothers or sisters escaping to the free cities
9: 25 @ 0 @ 100

# Crows ---

# CROW_NUMBER -> number of crows available per turn
12: 3 @ 1 @ 6
# CROW_BONUS -> bonus to crow chance following a failed crow (cumulative while ever follower remains at the same location)
13: 20 @ 0 @ 50

# Map Generation ---

# MAP_LOCATIONS_MIN -> minimum # of locations on map
14: 20 @ 20 @ 29
# MAP_LOCATIONS_MAX -> maximum # of locations on map
15: 40 @ 30 @ 50
# MAP_FREQUENCY -> % chance of a cell having a location
16: 4 @ 1 @ 10
# MAP_SPACING -> minimum spacing between locations
17: 2 @ 1 @ 4
# MAP_SIZE -> length and breadth of the map
18: 30 @ 30 @ 30
# MAP_DIVISOR -> maximum length of roads (higher the # less the length, max dist = mapSize/divisor
21: 3 @ 1 @ 10
# CONNECTOR_MIN -> minimum length of connector (higher # gives enables connector, eg. MapSize / CONNECTOR_MIN <= dist).  Range (Max value+1) - 9
22: 8 @ 8 @ 12
# CONNECTOR_MAX -> maximum length of connector (lower # enables longer connector, eg. MapSize / CONNECTOR_MAX <= dist). Range 1 - 3
23: 1 @ 1 @ 3
# TERRAIN_SMALL -> all terrain (sea, mountain, forest) is small if size <= this
24: 1 @ 1 @ 3
# SEA_LARGE -> sea is large if size if >= this
25: 20 @ 10 @ 30
# MOUNTAIN_LARGE -> mountain is large if size is >= this
26: 10 @ 10 @ 20
# FOREST_LARGE -> forest is large if size is >= this
27: 10 @ 10 @ 20

# Game ---

# GAME_EXILE -> number of years after Game_Revolt when actual game play begins (time Player has spent in exile)
19: 20 @ 15 @ 30
# GAME_REVOLT -> baseline year for 1st generation (time of revolt)
20: 1200 @ 1200 @ 1200
# GAME_STATE -> honour (treachery) & legend (combat) good ( trait > 3) or bad (trait < 3), per point difference from baseline of 3
30: 2 @ 1 @ 3
# GAME_PAST -> base year for past history events (happen between this year and the GAME_REVOLT)
42: 1000 @ 900 @ 1100
# KNOWN_REVERT -> number of turns before Known status reverts to Unknown (player and enemies) (also how long old info shown for)
44: 5 @ 1 @ 5
# INQUISITORS -> base number of inquisitors at game start (normal difficulty)
45: 4 @ 2 @ 8

# Events ---

# TRAIT_MULTIPLIER -> amount trait level (1 to 5) is multiplied by for automatic option follower tests
29: 20 @ 15 @ 25
# TEST_MULTIPLIER -> amount skill level (adj.) (halved for touched) multiplied for to create DM for roll for Variable Options
66: 10 @ 5 @ 15

# Challenges ---

# HAND_CARDS_NUM -> number of cards in a challenge hand
31: 6 @ 6 @ 6
# PLAYER_INFLUENCE -> how many cards can the player influence in a hand
32: 3 @ 3 @ 3
# NEUTRAL_EFFECT -> effect of neutral cards expressed as 2d #, eg. if '6' then 2d6 -> 2 to 12.
33: 6 @ 4 @ 8
# ARMY_SIZE -> divisor used to get relative army sizes modifier
34: 1000 @ 500 @ 2000
# SIT_CARD_SPREAD -> sets the numbers for GetSituationCardNumber, eg. 2 gives a spread of 70-16-8-4-2 for 1/2/3/4/5 cards (remainder/8X/4X/2X/1X)
35: 3 @ 2 @ 3
# RESULT_FACTOR -> 1X factor is a minor win, 2X a win, 3X a major win. -1X/-2X/-3X are minor loss, loss and major loss
37: 5 @ 4 @ 6
# OPPONENT_MARGIN -> determines opponent strategy, higher the # the more likely to choose a Balanced Strategy over the other two
38: 2 @ 1 @ 3
# TALK_THRESHOLD -> A characters relationship level (0 - 100) with the player required (>=) in order for them to agree to meet
39: 50 @ 30 @ 70
# SEDUCE_THRESHOLD -> characters rel level with Plyr needed (>=) to initiate a Seduce Challenge
61: 60 @ 55 @ 65
# ALLEGIANCE_THRESHOLD -> characters rel level with Plyr needed (>=) to Swear Allegiance to their cause
62: 70 @ 65 @ 75
# BLACKMAIL_THRESHOLD -> characters rel level with Plyr needed (>=) to initiate a Blackmail Challenge
63: 40 @ 35 @ 45
# IMPROVE_THRESHOLD -> characters rel level with Plyr needed (>=) to initiate a Befriend Challenge
64: 50 @ 45 @ 55
# FRIEND_THRESHOLD -> Relationship level with Player that actor needs (>=) in order to be considered a supporter in a challenge
58: 70 @ 60 @ 90
# ENEMY_THRESHOLD -> Relationship level with Player that actor needs (<=), in order to become a supporter of Player's Opponent 
60: 30 @ 10 @ 40
# NUM_SUPPORTERS -> max. number of supporters a character can have in a conflict
59: 3 @ 1 @ 3

# Relationships ---

# HOUSE_REL_GOOD -> % chance of good house, past history, relationship (Bad is same % as good, None is 100 - Good x 2), eg. good 30, bad 30, none 40
40: 35 @ 20 @ 40
# HOUSE_REL_EFFECT -> 1d'x' relationship effect for any, past history, relationship incident, eg. 30 gives a range of 1 to 30 (1d30)
41: 30 @ 20 @ 40
# HOUSE_REL_NUM -> number of rolls for each house for possible relations with others
43: 2 @ 1 @ 3

# AI ---

# AI_CONTINUE_SEARCH -> % chance of continuing a search goal (tested each turn)
46: 50 @ 1 @ 99
# AI_CONTINUE_HIDE -> % chance of continuing a hide goal (tested each turn)
47: 70 @ 1 @ 99
# AI_CONTINUE_WAIT -> % chance of continuing a wait goal (tested each turn)
48: 60 @ 1 @ 99
# AI_SEARCH_KNOWN -> % DM to add to search chance (improves) when active character is 'Known'
49: 30 @ 5 @ 50
# AI_SEARCH_HIDE -> % chance to find active character when enemy has the Hide goal
50: 30 @ 5 @ 80
# AI_SEARCH_MOVE -> % chance to find active character when enemy has the Move goal
51: 20 @ 5 @ 80
# AI_SEARCH_SEARCH -> % chance to find active character when enemy has the Search goal
52: 60 @ 5 @ 80
# AI_SEARCH_WAIT -> % chance to find active character when enemy has the Wait goal
53: 20 @ 5 @ 80
# AI_CAPITAL -> Min % of total Enemies who should remain in the Capital during normal operations (player location unknown)
54: 20 @ 10 @ 50
# AI_CONNECTOR -> num of bonus Loc's on a branch (priority array) whenever a Connector is present (more flexibility -> greater value as a branch)
55: 4 @ 0 @ 10
# AI_HUNT_THRESHOLD -> max num of turns since player last known that AI will continue to hunt for player (if within range)
56: 4 @ 4 @ 12

# Incarceration ---

# LOSS_OF_LEGEND -> amount of increase to 'Good' value of Legend_King each turn the Usurper is held in a dungeon by the King
57: 1 @ 0 @ 4

# Promises ---

# PROMISES_BASE -> base relationship boost (multiplied by strength of promise, eg. 1 to 5) that promises gives to NPC RelPlyr
69: 10 @ 5 @ 15
# PROMISES_HALVED -> num of Promises beyond ('>') where relationship effect (PROMISES_BASE) is halved
70: 4 @ 4 @ 10
# PROMISES_MAX -> max. num of Promises that can be handed out. No more promises beyond this point ('>')
71: 6 @ 6 @ 20

# Next valid number -> 72