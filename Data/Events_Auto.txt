# Events_Auto -> Automatic events that allow the player to choose an action while at a location
# NOTE: Keep order within individual events as shown. Sequence is important for file import routine.

# Name: descriptive
# ID: (Event ID) unique number for AUTO Events only (numbering 1000+) -> stored in PlayerEvents dictionary (can't have a Player Event ID)
# Type: Location (always)
# subType:(Location -> Capital/Major/Minor/Inn (can only be a Location subType)
# Cat: (Category) Auto (always)
# Freq: (Frequency) Normal (doesn't really matter as long as it's not 'None')
# Status: (Active / Dormant (autoEvents for once the player has assumed power start off as dormant)
# Event: (Event Text)

# [option]: Option Block (one block for each option, only use enough blocks for your need. Place block header at top
# text: option text (number is block, or option num, eg. sequential from 1 to 4). Keep it short and clear.
# reply: text shown when option selected

# [trigger]: Trigger block (optional, can have multiple triggers for each option or event). There must be at least one option with no triggers.
# check: Trigger Check ( None, Trait, GameVar)
# check -> if 'Trait' then -> 1 Combat, 2 Wits, 3 Charm, 4 Treachery, 5 Leadership, 6 Touched
# item: multi purpose number depending on Trigger Check type 
# thresh: Trigger threshold amount to be tested against, eg. < 3
# calc: Type of comparison for testing trigger (>=, <=, =)

# [outcome]: Outcome block (can have up to 3 outcome's for each option). Place block header at top
# outcome -> Each option requires an outcome. For a 'do nothing' outcome use '[outcome]' plus 'effect: None' (out, amount and apply aren't needed)
# effect: type of outcome Effect ( None, Conflict, EventTimer, EventStatus, Game)

# [outcome] -> Game
# data: multi-purpose outcome type, usually and ID of some form (depends on effect, must be an Integer), default '0'
# data -> if +ve then Good, if -ve then Bad
# if data <= 6 then data -> 1 Threat, 2 Justice, 3 Legend_Urs, 4 Legend_King, 5 Honour_Urs, 6 Honour_King (apply: Add or Random only)
# amount: outcome amount to change by (if applicable) multi-purpose, depends on type of effect, default '0', CAN'T BE NEGATIVE
# apply: how the amount is applied -> None / Add / Subtract / Equals / Random   where 'Random' is Add random range (amount). Default 'None'

# [outcome] -> EventStatus
# data: target EventID
# newStatus: specific to EventStatus outcomes, desired new Status of target event -> (Active, Live, Dormant, Dead)

# [outcome] -> EventTimer
# data: target EventID (can reference it's host decision), amount and apply (+, -, =, Random)
# timer: which timer -> Repeat / Dormant / Live

# [End] -> Place at the end of the event description.
# text tags, eg. '<...>' -> loc / lord / lady / knight / castellan / maester
# NOTE: Leave no spaces between lines WITHIN an event. Indents (tabs) are O.K, even better is colour coding using Notepad++ (example)


Name: Auto MajorHouse
ID: 1001
Type: Location
subType: Major
Cat: Auto
Freq: Normal
Event: You are at <loc>. How will you fill your day?
[option]
text: Seek an Audience with <lord>
reply: You make a formal request for an audience with <lord>
[outcome]
effect: EventStatus
data: 1
newStatus: Active
[option]
text: Seek an Audience with <lady>
reply: You make a formal request for an audience with <lady>
[outcome]
effect: EventStatus
data: 1011
newStatus: Active
[End]